https://bithomp.com/en developers


https://livenet.xrpl.org/


https://xrpscan.com/

rJzQVveWEob6x6PJQqXm9sdcFjGbACBwv2

Related Links
On other networks	XRPL Testnet | XRPL Devnet | Xahau | Xahau Testnet | Xahau JS Hooks
On other explorers	Bithomp (old view) | XRPL.org | XRPLF | XRPScan | XRPLWin | Blockchair | Gatehub | BitQuery


To-Do-Liste für den Live-Gang der Burni Token Webseite
Obwohl wir viele Verbesserungen vorgenommen haben, sind hier die wichtigsten verbleibenden Schritte, um die Webseite produktionsreif zu machen:

1. Kritische Sicherheit (Content-Security-Policy - CSP):

'unsafe-inline' für script-src eliminieren:

Bevorzugte Methode: Implementieren Sie serverseitig die Generierung von eindeutigen Nonce-Werten für jeden Inline-Skriptblock (inklusive der Skripte für Chart.js und Twitter-Widget, falls diese inline geladen werden sollen). Der Platzhalter {{NONCE}} im CSP-Header und in den <script>-Tags muss durch diesen dynamischen Wert ersetzt werden.

Alternative: Lagern Sie allen JavaScript-Code, einschließlich des Haupt-Skriptblocks am Ende der Datei, in externe .js-Dateien aus, die dann über <script src="/pfad/zu/ihrem/skript.js"></script> geladen werden. Die CSP-Direktive script-src 'self' würde dann ausreichen (plus die CDNs, falls diese weiterhin genutzt werden).

Überprüfung style-src 'self':

Stellen Sie sicher, dass alle CSS-Stile, insbesondere die von Tailwind generierten, durch einen Build-Prozess (z.B. mit der Tailwind CLI) in die Datei /assets/styles.css kompiliert werden.

Das Skript <script src="https://cdn.tailwindcss.com"></script> (Tailwind Play CDN) sollte dann entfernt werden, da es in der Produktion nicht benötigt wird und Performance kostet. Die CSP ist bereits korrekt auf style-src 'self'; gesetzt, was dies voraussetzt.

connect-src präzisieren:

Ersetzen Sie https://api.coingecko.com (oder andere Beispiel-APIs) durch die tatsächlich verwendete(n) API-Endpunkte(e) für Ihre Live-Preisdaten.

2. Inhalte und Assets finalisieren:

Platzhalter-URLs ersetzen:

Alle Vorkommen von https://IHRE_FINALE_DOMAIN.com müssen durch Ihre tatsächliche Domain ersetzt werden (in Meta-Tags, JSON-LD, hreflang-Tags).

Die Pfade zu og:image, logo und whitepaper im JSON-LD und den Meta-Tags müssen auf die finalen, korrekten Pfade auf Ihrem Server zeigen.

Lokales Hosting aller Assets:

Bilder: Alle Bilder (mascot.png, coin.png, gamepad.png etc.), die derzeit noch von https://i.imgur.com geladen werden (auch wenn im Code schon auf /assets/ umgestellt), müssen physisch in Ihrem /assets-Ordner (oder einem ähnlichen Ordner auf Ihrem Server) abgelegt werden. Stellen Sie sicher, dass die Pfade im HTML korrekt sind.

Video: Das Video token-burn.mp4 muss ebenfalls im /assets-Ordner liegen.

Hintergrundbild: Das Haupthintergrundbild (https://i.imgur.com/W01N6S4.png) sollte ebenfalls lokal gehostet werden.

Favicon: Fügen Sie ein Favicon für Ihre Webseite hinzu.

3. Live-Daten und API-Integration:

fetchLivePrices-Funktion:

Implementieren Sie eine Anbindung an eine echte, zuverlässige API für die Preisdaten von "Burni Token", XRP und allen anderen relevanten Kryptowährungen.

Stellen Sie sicher, dass die Token-IDs (z.B. für CoinGecko) korrekt sind und die API-Antworten korrekt verarbeitet werden.

Implementieren Sie eine robustere Fehlerbehandlung und Fallback-Mechanismen, falls die API nicht erreichbar ist oder keine Daten liefert (z.B. Anzeige von "Daten nicht verfügbar" statt Mock-Werten).

Statische Daten aktualisieren: Überprüfen Sie alle statischen Daten (z.B. Anzahl Halter, Trustlines in den KPI-Karten) und implementieren Sie ggf. Mechanismen, um diese dynamisch zu laden oder regelmäßig zu aktualisieren.

4. Internationalisierung (i18n):

Vollständige Übersetzungen: Übersetzen Sie alle Textelemente für alle im Sprachmenü angebotenen Sprachen (Spanisch, Französisch, Arabisch, Bengali, Portugiesisch, Russisch, Koreanisch, Türkisch, Mandarin, Hindi). Derzeit greifen diese auf englische Fallbacks zurück.

RTL-Styling: Testen und verfeinern Sie das Layout für RTL-Sprachen (wie Arabisch) gründlich. Tailwind bietet rtl:-Varianten, aber es können spezifische Anpassungen notwendig sein.

Zahlen- und Datumsformate: Stellen Sie sicher, dass Intl.NumberFormat und toLocaleString in fetchLivePrices und den Chart-Optionen die korrekten locales für alle Sprachen verwenden, um Zahlen, Währungen und Daten landesspezifisch korrekt darzustellen.

5. Build-Prozess und Optimierung:

Tailwind CSS Build: Richten Sie einen Build-Prozess ein (z.B. mit tailwindcss -i ./src/input.css -o ./assets/styles.css --minify), um Ihre Tailwind-Stile zu kompilieren, ungenutzte Klassen zu entfernen (PurgeCSS ist in Tailwind integriert) und die Ausgabe zu minimieren.

JavaScript: Führen Sie Ihren JavaScript-Code ebenfalls durch einen Minifier. Erwägen Sie, den gesamten Inline-Code in eine externe Datei auszulagern.

Bildoptimierung: Komprimieren Sie alle Bilder, um die Ladezeiten zu reduzieren.

6. Testing:

Browserübergreifende Tests: Testen Sie die Webseite ausführlich in den neuesten Versionen der gängigen Browser (Chrome, Firefox, Safari, Edge).

Responsive Tests: Testen Sie auf verschiedenen Geräten und Bildschirmgrößen (Smartphones, Tablets, Desktops).

Barrierefreiheitstests: Verwenden Sie Tools (z.B. WAVE, Axe) und manuelle Tests (Tastaturnavigation, Screenreader), um die Barrierefreiheit sicherzustellen.

Funktionale Tests: Überprüfen Sie alle interaktiven Elemente (Navigation, Sprachauswahl, FAQ-Suche, Links, Twitter-Feed).

7. SEO-Finalisierung:

Sitemap.xml: Erstellen Sie eine sitemap.xml und laden Sie diese bei Suchmaschinen hoch.

Robots.txt: Erstellen Sie eine robots.txt-Datei, um das Crawling-Verhalten zu steuern.

hreflang-Tags: Überprüfen und finalisieren Sie die hreflang-Tags mit den korrekten URLs Ihrer Live-Seite für jede Sprachversion.

Wenn diese Punkte sorgfältig abgearbeitet werden, ist die Webseite deutlich besser für einen Live-Betrieb gerüstet. Besonders die Sicherheitspunkte (CSP) und die korrekte Darstellung aller Inhalte (Assets, Übersetzungen, Live-Daten) sind entscheidend.